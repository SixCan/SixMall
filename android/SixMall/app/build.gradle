apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin:'jacoco'

jacoco{
    toolVersion "0.7.4.201502262128"
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "ca.six.mall"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ca.six.mall.util.JUnitJacocoTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        //需要在这里也添加，否则计算出来的覆盖率为0
        debug{
            testCoverageEnabled true
        }
    }

    dataBinding {
        enabled = true
    }
}


def support = "27.1.1"
def leakCanary = "1.6.1"
def lifecycle_version = "1.1.1"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$support"
    implementation "com.android.support:design:$support"
    implementation "com.android.support:cardview-v7:$support"
    implementation "com.android.support:support-dynamic-animation:$support"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"


    implementation 'ca.six.util:Permisssion6:1.0.1'
    implementation 'ca.six.util:LogUtil:1.0.1'

    implementation "org.greenrobot:eventbus:3.1.1"
    kapt 'org.greenrobot:eventbus-annotation-processor:3.1.1'

    // 不选用Glide, 是因为其方法数有近2500; 功能更强大且可定制, 但我没需求. 所以选用更小的Picasso.
    implementation ('com.squareup.picasso:picasso:2.71828') {
        exclude group: 'com.android.support'
    }

    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'com.github.joyrun.ActivityRouter:router:0.6.2'
    kapt 'com.github.joyrun.ActivityRouter:router-compiler:0.6.2'


    /*
    // Epoxy has an issue when working with databinding.v2
    implementation 'com.airbnb.android:epoxy:2.16.2'
    kapt "com.airbnb.android:epoxy-processor:2.16.2"
    implementation 'com.airbnb.android:epoxy-databinding:2.16.2'
    kapt "com.android.databinding:compiler:$android_plugin_version"
    */

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation "org.robolectric:shadows-support-v4:3.3.1"

    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
}


kapt {
    // GreenRobot/EventBus3.x
    arguments {
        arg('eventBusIndex', 'ca.six.mall.SixMallEventBusIndex')
    }

    // Airbnb/Epoxy. So the `AutoModel` annotation work properly.
    correctErrorTypes = true
}


task jacocoTestReport(type:JacocoReport,dependsOn:"connectedAndroidTest"){
    group="Reporting"
    description = "Generate Jacoco coverage reports"

    //exclude auto-generated classes and tests
    def fileFilter=['**/R.class',
                    '**/R$*.class',
                    '**/Manifest*.*',
                    '**/BuildConfig.*',
                    'android/**/*.*',
    ]
    def debugTree=fileTree(dir:
            "${rootDir}/sdk/build/intermediates/classes/debug",
            excludes: fileFilter)
    def sdkSrc="${rootDir}/sdk/src/main/java"

    //指明对哪个目录下的代码进行绘制覆盖率统计图标
    sourceDirectories=files([sdkSrc])
    //指明对哪个目录下的代码进行覆盖率统计
    classDirectories=files([debugTree])
    additionalSourceDirs=files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/generated/source/r/debug"
    ])
    executionData=fileTree(dir:project.projectDir,includes:['**/*.exec','**/*.ec'])
    reports{
        xml.enabled=true
        xml.destination="${buildDir}/jacocoTestReport.xml"
        csv.enabled=false
        html.enabled=true
        html.destination="${buildDir}/reports/jacoco"
    }
}